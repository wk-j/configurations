pool:
  vmImage: 'Ubuntu 16.04'

# pool:
#   vmImage: 'vs2017-win2016'
# pool:
#   vmImage: 'windows-2019'
# pool:
#   vmImage: 'macOS-10.13'

variables:
  buildConfiguration: 'Release'
  version: '0.2.1'
  repository: "wk-j/azure-release"

steps:

- script: dotnet tool install -g Cake.Tool
  displayName: "Install Cake"

# -- TEST

- script: |
    dotnet test tests/MyWeb.Tests/MyWeb.Tests.csproj \
      --configuration Release  \
      --logger trx \
      /p:CollectCoverage=true \
      /p:CoverletOutputFormat=cobertura
  displayName: Run tests

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    ~/.dotnet/tools/reportgenerator -reports:"./tests/**/coverage.cobertura.xml" \
      -targetdir:./.tests \
      -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
  displayName: Create code coverage report

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/.tests/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/.tests'

# -- BUILD

- script: ~/.dotnet/tools/dotnet-cake -target=Pack
  displayName: 'Build with Cake'


# -- PUBLISH

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    packagesToPush: '.publish/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: nuget.org

- task: GitHubRelease@0
  displayName: 'GitHub release (create)'
  inputs:
    action: 'create'
    gitHubConnection: 'github.com'
    repositoryName: '$(repository)'
    title: $(Build.BuildNumber)
    tagSource: 'manual'
    tag: $(Build.BuildNumber)
    releaseNotesSource: input
    releaseNotes: ':rocket: $(Build.BuildNumber)'
    assets: '.publish/*.nupkg'
